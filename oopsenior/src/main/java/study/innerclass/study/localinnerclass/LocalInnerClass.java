package study.innerclass.study.localinnerclass;

/**
 * @author AllLearnAllNothingRookie
 * @version 1.0
 * @date 2022/12/10 21:48
 * todo:局部内部类的使用
 *     说明:局部内部类是定义在外部类的局部位置,比如方法中,并且有类名
 *     1.局部内部类可以直接访问外部类的所有成员,包含私有的
 *     2.局部内部类不能添加访问修饰符,因为局部内部类的地位就相当于一个局部变量,局部变量是不能
 *       使用修饰符的,但是可以使用final修饰,因为局部变量也可以使用final修饰
 *     3.局部内部类的作用域:仅仅在定义它的代码块或方法体中
 *     4.局部内部类访问外部类成员:直接访问
 *     5.外部类访问局部内部类的成员:
 *        访问方式: 创建对象,再访问(注意:必须是在局部内部类的作用域内)
 *     6.外部其他类不能访问一个类中的局部内部类(因为局部内部类相当于一个类中的局部变量)
 *     7.如果外部类和局部内部类的成员重名了后,默认遵循就近原则,如果想在局部内部类中
 *       访问外部类的成员则可以使用 外部类名.this.成员 去访问
 *       外部类名.this:本质就是一个外部类的对象,谁调用方法就是那个类
 *     8.局部内部类作为方法的一部分，因此在局部内部类中还可以使用方法体中的局部变量，
 *      但是该局部变量必须是final声明的，即只能使用方法体中的常量。
 *      Java8以前需要手动加final，Java8以后系统自动加final，
 *      前提是方法中没其他位置修改该变量的值
 */
public class LocalInnerClass {
    public static void main(String[] args) {
        Outer outer = new Outer();
        //使用Outer类中m1方法中的局部内部类
        outer.m1();
    }
}
